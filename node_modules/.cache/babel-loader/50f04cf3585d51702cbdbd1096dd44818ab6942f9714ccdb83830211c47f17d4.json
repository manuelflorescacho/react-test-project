{"ast":null,"code":"var _jsxFileName = \"/Users/detmaneh/Development/react/react-test-project/src/components/QuestionsPage/QuestionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, Component, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport AppContext from '../AppContext/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsPage = () => {\n  _s();\n  const myContext = useContext(AppContext);\n  const checkSelected = event => {\n    console.log(\"--------\");\n    console.log(event.target.id);\n    console.log(myContext.options);\n    if (myContext.options.has(event.target.id)) {\n      myContext.options.delete(event.target.id);\n    } else {\n      myContext.options.add(event.target.id);\n    }\n    myContext.setOptionsValue(myContext.options);\n    console.log(myContext.options);\n    console.log(\"--------\");\n  };\n  // const myContext = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      textAlign: \"left\",\n      left: 0\n    },\n    children: [(() => {\n      let chks = [];\n      myContext.options.forEach(key => chks.push( /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"checkbox\",\n        id: key,\n        label: key.replace(/([A-Z])/g, ' $1').trim(),\n        onChange: checkSelected\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)));\n      return chks;\n    })(), /*#__PURE__*/_jsxDEV(Form.Check, {\n      type: \"checkbox\",\n      id: \"OptionA\",\n      label: \"Option A\",\n      onChange: checkSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      type: \"checkbox\",\n      id: \"OptionB\",\n      label: \"Option B\",\n      onChange: checkSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      type: \"checkbox\",\n      id: \"OptionC\",\n      label: \"Option C\",\n      onChange: checkSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n      type: \"checkbox\",\n      id: \"OptionD\",\n      label: \"Option D\",\n      onChange: checkSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsPage, \"yE3Iv7CO4qrhxCwBkY/HN0dpG8E=\");\n_c = QuestionsPage;\nexport default QuestionsPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionsPage\");","map":{"version":3,"names":["React","useState","Component","useContext","Button","Form","Card","Row","Col","AppContext","QuestionsPage","myContext","checkSelected","event","console","log","target","id","options","has","delete","add","setOptionsValue","textAlign","left","chks","forEach","key","push","replace","trim"],"sources":["/Users/detmaneh/Development/react/react-test-project/src/components/QuestionsPage/QuestionsPage.js"],"sourcesContent":["import React, { useState, Component, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport AppContext from '../AppContext/AppContext';\n\nconst QuestionsPage = () => {\n  const myContext = useContext(AppContext);\n  const checkSelected = (event) => {\n    console.log(\"--------\");\n    console.log(event.target.id);\n    console.log(myContext.options);\n    if (myContext.options.has(event.target.id)) {\n      myContext.options.delete(event.target.id);\n    } else {\n      myContext.options.add(event.target.id)\n    }\n    myContext.setOptionsValue(myContext.options);\n    console.log(myContext.options);\n    console.log(\"--------\");\n  }\n  // const myContext = useContext(AppContext);\n  return (\n    <Form style={{textAlign:\"left\", left:0}} >\n      {(() => {\n        let chks = []\n        myContext.options.forEach(\n          key => \n          chks.push(\n            <Form.Check \n              type=\"checkbox\"\n              key={key}\n              id={key}\n              label={key.replace(/([A-Z])/g, ' $1').trim()}\n              onChange={checkSelected}\n            />\n          )\n        )\n        return chks;\n      })()}\n      <Form.Check \n        type=\"checkbox\"\n        id=\"OptionA\"\n        label=\"Option A\"\n        onChange={checkSelected}\n      />\n      <Form.Check \n        type=\"checkbox\"\n        id=\"OptionB\"\n        label=\"Option B\"\n        onChange={checkSelected}\n      />\n      <Form.Check \n        type=\"checkbox\"\n        id=\"OptionC\"\n        label=\"Option C\"\n        onChange={checkSelected}\n      />\n      <Form.Check \n        type=\"checkbox\"\n        id=\"OptionD\"\n        label=\"Option D\"\n        onChange={checkSelected}\n      />\n    </Form>\n  );\n}\n\nexport default QuestionsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAElD,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAMC,SAAS,GAAGR,UAAU,CAACM,UAAU,CAAC;EACxC,MAAMG,aAAa,GAAIC,KAAK,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBD,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC;IAC5BH,OAAO,CAACC,GAAG,CAACJ,SAAS,CAACO,OAAO,CAAC;IAC9B,IAAIP,SAAS,CAACO,OAAO,CAACC,GAAG,CAACN,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC,EAAE;MAC1CN,SAAS,CAACO,OAAO,CAACE,MAAM,CAACP,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC;IAC3C,CAAC,MAAM;MACLN,SAAS,CAACO,OAAO,CAACG,GAAG,CAACR,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC;IACxC;IACAN,SAAS,CAACW,eAAe,CAACX,SAAS,CAACO,OAAO,CAAC;IAC5CJ,OAAO,CAACC,GAAG,CAACJ,SAAS,CAACO,OAAO,CAAC;IAC9BJ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACzB,CAAC;EACD;EACA,oBACE,QAAC,IAAI;IAAC,KAAK,EAAE;MAACQ,SAAS,EAAC,MAAM;MAAEC,IAAI,EAAC;IAAC,CAAE;IAAA,WACrC,CAAC,MAAM;MACN,IAAIC,IAAI,GAAG,EAAE;MACbd,SAAS,CAACO,OAAO,CAACQ,OAAO,CACvBC,GAAG,IACHF,IAAI,CAACG,IAAI,eACP,QAAC,IAAI,CAAC,KAAK;QACT,IAAI,EAAC,UAAU;QAEf,EAAE,EAAED,GAAI;QACR,KAAK,EAAEA,GAAG,CAACE,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAACC,IAAI,EAAG;QAC7C,QAAQ,EAAElB;MAAc,GAHnBe,GAAG;QAAA;QAAA;QAAA;MAAA,QAIR,CACH,CACF;MACD,OAAOF,IAAI;IACb,CAAC,GAAG,eACJ,QAAC,IAAI,CAAC,KAAK;MACT,IAAI,EAAC,UAAU;MACf,EAAE,EAAC,SAAS;MACZ,KAAK,EAAC,UAAU;MAChB,QAAQ,EAAEb;IAAc;MAAA;MAAA;MAAA;IAAA,QACxB,eACF,QAAC,IAAI,CAAC,KAAK;MACT,IAAI,EAAC,UAAU;MACf,EAAE,EAAC,SAAS;MACZ,KAAK,EAAC,UAAU;MAChB,QAAQ,EAAEA;IAAc;MAAA;MAAA;MAAA;IAAA,QACxB,eACF,QAAC,IAAI,CAAC,KAAK;MACT,IAAI,EAAC,UAAU;MACf,EAAE,EAAC,SAAS;MACZ,KAAK,EAAC,UAAU;MAChB,QAAQ,EAAEA;IAAc;MAAA;MAAA;MAAA;IAAA,QACxB,eACF,QAAC,IAAI,CAAC,KAAK;MACT,IAAI,EAAC,UAAU;MACf,EAAE,EAAC,SAAS;MACZ,KAAK,EAAC,UAAU;MAChB,QAAQ,EAAEA;IAAc;MAAA;MAAA;MAAA;IAAA,QACxB;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEX,CAAC;AAAA,GA5DKF,aAAa;AAAA,KAAbA,aAAa;AA8DnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}