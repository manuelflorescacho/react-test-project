{"ast":null,"code":"var _jsxFileName = \"/Users/detmaneh/Development/react/react-test-project/src/components/QuestionsPage/QuestionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, Component, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport AppContext from '../AppContext/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsPage = () => {\n  _s();\n  const myContext = useContext(AppContext);\n  const optionsSelectionList = myContext.options;\n  const checkSelected = id => {\n    if (optionsSelectionList.has(id)) {\n      optionsSelectionList.delete(id);\n    } else {\n      optionsSelectionList.add(id);\n    }\n    myContext.setOptionsValue(optionsSelectionList);\n  };\n  // const myContext = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      textAlign: \"left\",\n      left: 0\n    },\n    children: (() => {\n      let chks = [];\n      myContext.currentOptionList.forEach(key => {\n        chks.push( /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\"\n          // checked={optionsSelectionList.has(key)}\n          ,\n\n          id: key,\n          label: key.replace(/([A-Z])/g, ' $1').trim(),\n          onChange: checkSelected\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this));\n      });\n      return chks;\n    })()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsPage, \"yE3Iv7CO4qrhxCwBkY/HN0dpG8E=\");\n_c = QuestionsPage;\nexport default QuestionsPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionsPage\");","map":{"version":3,"names":["React","useState","Component","useContext","Button","Form","Card","Row","Col","AppContext","QuestionsPage","myContext","optionsSelectionList","options","checkSelected","id","has","delete","add","setOptionsValue","textAlign","left","chks","currentOptionList","forEach","key","push","replace","trim"],"sources":["/Users/detmaneh/Development/react/react-test-project/src/components/QuestionsPage/QuestionsPage.js"],"sourcesContent":["import React, { useState, Component, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport AppContext from '../AppContext/AppContext';\n\nconst QuestionsPage = () => {\n  const myContext = useContext(AppContext);\n  const optionsSelectionList = myContext.options;\n  const checkSelected = (id) => {\n    if (optionsSelectionList.has(id)) {\n      optionsSelectionList.delete(id);\n    } else {\n      optionsSelectionList.add(id)\n    }\n    myContext.setOptionsValue(optionsSelectionList);\n  }\n  // const myContext = useContext(AppContext);\n  return (\n    <Form style={{textAlign:\"left\", left:0}} >\n      {(() => {\n        let chks = []\n        myContext.currentOptionList.forEach(\n          key => { \n            chks.push(\n              <Form.Check \n                type=\"checkbox\"\n                // checked={optionsSelectionList.has(key)}\n                key={key}\n                id={key}\n                label={key.replace(/([A-Z])/g, ' $1').trim()}\n                onChange={checkSelected}\n              />\n            )\n          }\n        )\n        return chks;\n      })()}\n    </Form>\n  );\n}\n\nexport default QuestionsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AAAC;AAElD,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAMC,SAAS,GAAGR,UAAU,CAACM,UAAU,CAAC;EACxC,MAAMG,oBAAoB,GAAGD,SAAS,CAACE,OAAO;EAC9C,MAAMC,aAAa,GAAIC,EAAE,IAAK;IAC5B,IAAIH,oBAAoB,CAACI,GAAG,CAACD,EAAE,CAAC,EAAE;MAChCH,oBAAoB,CAACK,MAAM,CAACF,EAAE,CAAC;IACjC,CAAC,MAAM;MACLH,oBAAoB,CAACM,GAAG,CAACH,EAAE,CAAC;IAC9B;IACAJ,SAAS,CAACQ,eAAe,CAACP,oBAAoB,CAAC;EACjD,CAAC;EACD;EACA,oBACE,QAAC,IAAI;IAAC,KAAK,EAAE;MAACQ,SAAS,EAAC,MAAM;MAAEC,IAAI,EAAC;IAAC,CAAE;IAAA,UACrC,CAAC,MAAM;MACN,IAAIC,IAAI,GAAG,EAAE;MACbX,SAAS,CAACY,iBAAiB,CAACC,OAAO,CACjCC,GAAG,IAAI;QACLH,IAAI,CAACI,IAAI,eACP,QAAC,IAAI,CAAC,KAAK;UACT,IAAI,EAAC;UACL;UAAA;;UAEA,EAAE,EAAED,GAAI;UACR,KAAK,EAAEA,GAAG,CAACE,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAACC,IAAI,EAAG;UAC7C,QAAQ,EAAEd;QAAc,GAHnBW,GAAG;UAAA;UAAA;UAAA;QAAA,QAIR,CACH;MACH,CAAC,CACF;MACD,OAAOH,IAAI;IACb,CAAC;EAAG;IAAA;IAAA;IAAA;EAAA,QACC;AAEX,CAAC;AAAA,GAlCKZ,aAAa;AAAA,KAAbA,aAAa;AAoCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}