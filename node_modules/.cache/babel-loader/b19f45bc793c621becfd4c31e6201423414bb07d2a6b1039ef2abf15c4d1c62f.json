{"ast":null,"code":"import React,{useContext}from'react';import Form from'react-bootstrap/Form';import AppContext from'../AppContext/AppContext';import{jsx as _jsx}from\"react/jsx-runtime\";var QuestionsPage=function QuestionsPage(){var myContext=useContext(AppContext);var optionsSelectionList=myContext.options;var mapList=new Map();var checkSelected=function checkSelected(event){if(optionsSelectionList.has(event.target.id)){optionsSelectionList.delete(event.target.id);}else{optionsSelectionList.add(event.target.id);}myContext.setOptionsValue(optionsSelectionList);};myContext.currentOptionList.forEach(function(key){mapList.set(key,optionsSelectionList.has(key));});return/*#__PURE__*/_jsx(Form,{style:{textAlign:\"left\",left:0},\"data-testid\":\"QuestionsPage\",children:function(){var chks=[];mapList.forEach(function(value,key){chks.push(/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",id:key,label:key.replace(/([A-Z])/g,' $1').trim(),onChange:checkSelected,defaultChecked:value},key));});return chks;}()});};export default QuestionsPage;","map":{"version":3,"names":["React","useContext","Form","AppContext","QuestionsPage","myContext","optionsSelectionList","options","mapList","Map","checkSelected","event","has","target","id","delete","add","setOptionsValue","currentOptionList","forEach","key","set","textAlign","left","chks","value","push","replace","trim"],"sources":["/Users/detmaneh/Development/react/react-test-project/src/components/QuestionsPage/QuestionsPage.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport AppContext from '../AppContext/AppContext';\n\nconst QuestionsPage = () => {\n  const myContext = useContext(AppContext);\n  const optionsSelectionList = myContext.options;\n  const mapList= new Map();\n  const checkSelected = (event) => {\n    if (optionsSelectionList.has(event.target.id)) {\n      optionsSelectionList.delete(event.target.id);\n    } else {\n      optionsSelectionList.add(event.target.id)\n    }\n    myContext.setOptionsValue(optionsSelectionList);\n  }\n  myContext.currentOptionList.forEach(\n    key => { \n      mapList.set(key, optionsSelectionList.has(key));\n    }\n  )\n  return (\n    <Form style={{textAlign:\"left\", left:0}} data-testid=\"QuestionsPage\">\n      {(() => {\n        let chks = [];\n        mapList.forEach((value, key) => {\n          chks.push(\n            <Form.Check \n              type=\"checkbox\"\n              key={key}\n              id={key}\n              label={key.replace(/([A-Z])/g, ' $1').trim()}\n              onChange={checkSelected}\n              defaultChecked={value}\n            />\n          )\n        })\n        return chks;\n      })()}\n    </Form>\n  );\n}\n\nexport default QuestionsPage;\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,MAAOC,KAAI,KAAM,sBAAsB,CACvC,MAAOC,WAAU,KAAM,0BAA0B,CAAC,2CAElD,GAAMC,cAAa,CAAG,QAAhBA,cAAa,EAAS,CAC1B,GAAMC,UAAS,CAAGJ,UAAU,CAACE,UAAU,CAAC,CACxC,GAAMG,qBAAoB,CAAGD,SAAS,CAACE,OAAO,CAC9C,GAAMC,QAAO,CAAE,GAAIC,IAAG,EAAE,CACxB,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIC,KAAK,CAAK,CAC/B,GAAIL,oBAAoB,CAACM,GAAG,CAACD,KAAK,CAACE,MAAM,CAACC,EAAE,CAAC,CAAE,CAC7CR,oBAAoB,CAACS,MAAM,CAACJ,KAAK,CAACE,MAAM,CAACC,EAAE,CAAC,CAC9C,CAAC,IAAM,CACLR,oBAAoB,CAACU,GAAG,CAACL,KAAK,CAACE,MAAM,CAACC,EAAE,CAAC,CAC3C,CACAT,SAAS,CAACY,eAAe,CAACX,oBAAoB,CAAC,CACjD,CAAC,CACDD,SAAS,CAACa,iBAAiB,CAACC,OAAO,CACjC,SAAAC,GAAG,CAAI,CACLZ,OAAO,CAACa,GAAG,CAACD,GAAG,CAAEd,oBAAoB,CAACM,GAAG,CAACQ,GAAG,CAAC,CAAC,CACjD,CAAC,CACF,CACD,mBACE,KAAC,IAAI,EAAC,KAAK,CAAE,CAACE,SAAS,CAAC,MAAM,CAAEC,IAAI,CAAC,CAAC,CAAE,CAAC,cAAY,eAAe,UAChE,UAAM,CACN,GAAIC,KAAI,CAAG,EAAE,CACbhB,OAAO,CAACW,OAAO,CAAC,SAACM,KAAK,CAAEL,GAAG,CAAK,CAC9BI,IAAI,CAACE,IAAI,cACP,KAAC,IAAI,CAAC,KAAK,EACT,IAAI,CAAC,UAAU,CAEf,EAAE,CAAEN,GAAI,CACR,KAAK,CAAEA,GAAG,CAACO,OAAO,CAAC,UAAU,CAAE,KAAK,CAAC,CAACC,IAAI,EAAG,CAC7C,QAAQ,CAAElB,aAAc,CACxB,cAAc,CAAEe,KAAM,EAJjBL,GAAG,CAKR,CACH,CACH,CAAC,CAAC,CACF,MAAOI,KAAI,CACb,CAAC,EAAG,EACC,CAEX,CAAC,CAED,cAAepB,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}